// Операторы производян некоторые действия над операндами
// 5 * 2 Левый операнд(5) оператор умножения(*) правый операнд(2)

// Унарный оператор применяется только к одному операнду, например -5, унарный минус.
// Бинарный оператор применяется к двум операндам, 2 - 2 , бинырнй минус

// Если бинарный плюс применить к строкам, то произойдет сложение строк
// Если хотябы один операнд является строкой, то второй прировняется к строке
// Унарный плюс преобразовывает строку-число в число, или булево значение в число, делает то же самое что и Number, только более укороченно
// Операторы имеют приоритет, и поэтому выполняются в логической математической последоватенльности
// Оператор присваивания = просто присваивает значение справа налево, имеет низкий приоритет
// Остаток от деления %, возведение в степень **

//Инкремент++ и дикремент--, имеет постфиксное++ и ++префиксное написание, при постфиксном сначала в выражении возвращается значение до выполнения инкремента/дикремента, а потом происходит прибавление/вычитание, в префиксной форме наоборот. ИХ можно применить только к переменным

// Сокращенная арифметика с присваиванием +=   то есть,  n +=5 --> n = n + 5
let stringName = "Эта строка " + "Плюс эта строка";
let stringPlus = "Строка плюс " + 222;
let _222 = 222;

let incrementValue = ++_222;
alert(incrementValue)